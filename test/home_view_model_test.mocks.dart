// Mocks generated by Mockito 5.1.0 from annotations
// in auction/test/home_view_model_test.dart.
// Do not manually edit this file.

import 'package:auction_repository/src/auction.dart' as _i3;
import 'package:auction_repository/src/auction_repository.dart' as _i5;
import 'package:authentication_repository/authentication_repository.dart'
    as _i4;
import 'package:firebase_database/firebase_database.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDateTime_0 extends _i1.Fake implements DateTime {}

class _FakeQuery_1 extends _i1.Fake implements _i2.Query {}

/// A class which mocks [Auction].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuction extends _i1.Mock implements _i3.Auction {
  MockAuction() {
    _i1.throwOnMissingStub(this);
  }

  @override
  DateTime get end => (super.noSuchMethod(Invocation.getter(#end),
      returnValue: _FakeDateTime_0()) as DateTime);
  @override
  set end(DateTime? _end) => super.noSuchMethod(Invocation.setter(#end, _end),
      returnValueForMissingStub: null);
  @override
  String get image =>
      (super.noSuchMethod(Invocation.getter(#image), returnValue: '')
          as String);
  @override
  set image(String? _image) =>
      super.noSuchMethod(Invocation.setter(#image, _image),
          returnValueForMissingStub: null);
  @override
  double get price =>
      (super.noSuchMethod(Invocation.getter(#price), returnValue: 0.0)
          as double);
  @override
  set price(double? _price) =>
      super.noSuchMethod(Invocation.setter(#price, _price),
          returnValueForMissingStub: null);
  @override
  DateTime get start => (super.noSuchMethod(Invocation.getter(#start),
      returnValue: _FakeDateTime_0()) as DateTime);
  @override
  set start(DateTime? _start) =>
      super.noSuchMethod(Invocation.setter(#start, _start),
          returnValueForMissingStub: null);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  set title(String? _title) =>
      super.noSuchMethod(Invocation.setter(#title, _title),
          returnValueForMissingStub: null);
  @override
  String get vendor =>
      (super.noSuchMethod(Invocation.getter(#vendor), returnValue: '')
          as String);
  @override
  set vendor(String? _vendor) =>
      super.noSuchMethod(Invocation.setter(#vendor, _vendor),
          returnValueForMissingStub: null);
  @override
  String get topBidder =>
      (super.noSuchMethod(Invocation.getter(#topBidder), returnValue: '')
          as String);
  @override
  set topBidder(String? _topBidder) =>
      super.noSuchMethod(Invocation.setter(#topBidder, _topBidder),
          returnValueForMissingStub: null);
  @override
  bool get isActive =>
      (super.noSuchMethod(Invocation.getter(#isActive), returnValue: false)
          as bool);
  @override
  set isActive(bool? _isActive) =>
      super.noSuchMethod(Invocation.setter(#isActive, _isActive),
          returnValueForMissingStub: null);
  @override
  set registeredUsers(List<String>? _registeredUsers) =>
      super.noSuchMethod(Invocation.setter(#registeredUsers, _registeredUsers),
          returnValueForMissingStub: null);
  @override
  void register(_i4.User? user) =>
      super.noSuchMethod(Invocation.method(#register, [user]),
          returnValueForMissingStub: null);
  @override
  bool isRegistered(_i4.User? user) =>
      (super.noSuchMethod(Invocation.method(#isRegistered, [user]),
          returnValue: false) as bool);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [AuctionDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuctionDao extends _i1.Mock implements _i5.AuctionDao {
  MockAuctionDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveAuction(String? key, _i3.Auction? auction) =>
      super.noSuchMethod(Invocation.method(#saveAuction, [key, auction]),
          returnValueForMissingStub: null);
  @override
  void placeBid(String? key, double? bid, String? userName) =>
      super.noSuchMethod(Invocation.method(#placeBid, [key, bid, userName]),
          returnValueForMissingStub: null);
  @override
  void registedUser(String? key, List<String>? users) =>
      super.noSuchMethod(Invocation.method(#registedUser, [key, users]),
          returnValueForMissingStub: null);
  @override
  void registerForAuction(String? key, _i3.Auction? auction) =>
      super.noSuchMethod(Invocation.method(#registerForAuction, [key, auction]),
          returnValueForMissingStub: null);
  @override
  _i2.Query getAuctionsQuery() =>
      (super.noSuchMethod(Invocation.method(#getAuctionsQuery, []),
          returnValue: _FakeQuery_1()) as _i2.Query);
  @override
  void registerNotification(_i3.Auction? auction) =>
      super.noSuchMethod(Invocation.method(#registerNotification, [auction]),
          returnValueForMissingStub: null);
}
